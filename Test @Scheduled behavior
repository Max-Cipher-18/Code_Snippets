import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;

import static org.junit.jupiter.api.Assertions.assertTrue;

@SpringBootTest
public class MyScheduledTaskTest {

    @Autowired
    private ThreadPoolTaskScheduler taskScheduler;

    private CountDownLatch countDownLatch = new CountDownLatch(1);

    @Test
    public void testScheduledTaskExecution() throws InterruptedException {
        // Define your test logic or assertions here

        // Example: Use CountDownLatch to wait for the task to execute at least once
        countDownLatch.await(15, TimeUnit.MILLISECONDS);

        // Assert some condition based on the scheduled task execution
        assertTrue(/* Condition to check */);
    }

    @Scheduled(fixedRate = 10)
    public void myScheduledMethod() {
        // Method logic to be executed periodically
        // You might include logic here to signal or perform some action to validate in the test
        countDownLatch.countDown();
    }
}
